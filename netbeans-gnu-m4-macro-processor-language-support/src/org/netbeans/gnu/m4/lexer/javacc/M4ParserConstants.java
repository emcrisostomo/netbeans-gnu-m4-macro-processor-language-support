/* Generated By:JavaCC: Do not edit this line. M4ParserConstants.java */
package org.netbeans.gnu.m4.lexer.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface M4ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 2;
  /** RegularExpression Id. */
  int DNL_COMMENT = 3;
  /** RegularExpression Id. */
  int LBRACKET = 4;
  /** RegularExpression Id. */
  int MLBRACKET = 5;
  /** RegularExpression Id. */
  int MRBRACKET = 6;
  /** RegularExpression Id. */
  int RBRACKET = 7;
  /** RegularExpression Id. */
  int LQUOTE = 8;
  /** RegularExpression Id. */
  int MQLQUOTE = 9;
  /** RegularExpression Id. */
  int MQRQUOTE = 10;
  /** RegularExpression Id. */
  int RQUOTE = 11;
  /** RegularExpression Id. */
  int LPAREN = 12;
  /** RegularExpression Id. */
  int RPAREN = 13;
  /** RegularExpression Id. */
  int LBRACE = 14;
  /** RegularExpression Id. */
  int RBRACE = 15;
  /** RegularExpression Id. */
  int SEMICOLON = 16;
  /** RegularExpression Id. */
  int COMMA = 17;
  /** RegularExpression Id. */
  int DOT = 18;
  /** RegularExpression Id. */
  int ASSIGN = 19;
  /** RegularExpression Id. */
  int LT = 20;
  /** RegularExpression Id. */
  int BANG = 21;
  /** RegularExpression Id. */
  int TILDE = 22;
  /** RegularExpression Id. */
  int HOOK = 23;
  /** RegularExpression Id. */
  int COLON = 24;
  /** RegularExpression Id. */
  int EQ = 25;
  /** RegularExpression Id. */
  int LE = 26;
  /** RegularExpression Id. */
  int GE = 27;
  /** RegularExpression Id. */
  int NE = 28;
  /** RegularExpression Id. */
  int SC_OR = 29;
  /** RegularExpression Id. */
  int SC_AND = 30;
  /** RegularExpression Id. */
  int INCR_OP = 31;
  /** RegularExpression Id. */
  int DECR_OP = 32;
  /** RegularExpression Id. */
  int PLUS = 33;
  /** RegularExpression Id. */
  int MINUS = 34;
  /** RegularExpression Id. */
  int STAR = 35;
  /** RegularExpression Id. */
  int SLASH = 36;
  /** RegularExpression Id. */
  int BIT_AND = 37;
  /** RegularExpression Id. */
  int BIT_OR = 38;
  /** RegularExpression Id. */
  int XOR = 39;
  /** RegularExpression Id. */
  int REM = 40;
  /** RegularExpression Id. */
  int LSHIFT = 41;
  /** RegularExpression Id. */
  int PLUSASSIGN = 42;
  /** RegularExpression Id. */
  int MINUSASSIGN = 43;
  /** RegularExpression Id. */
  int STARASSIGN = 44;
  /** RegularExpression Id. */
  int SLASHASSIGN = 45;
  /** RegularExpression Id. */
  int ANDASSIGN = 46;
  /** RegularExpression Id. */
  int ORASSIGN = 47;
  /** RegularExpression Id. */
  int XORASSIGN = 48;
  /** RegularExpression Id. */
  int REMASSIGN = 49;
  /** RegularExpression Id. */
  int LSHIFTASSIGN = 50;
  /** RegularExpression Id. */
  int RSIGNEDSHIFTASSIGN = 51;
  /** RegularExpression Id. */
  int ELLIPSIS = 52;
  /** RegularExpression Id. */
  int LBRACKET_QG = 53;
  /** RegularExpression Id. */
  int RBRACKET_QG = 54;
  /** RegularExpression Id. */
  int DOLLAR_QG = 55;
  /** RegularExpression Id. */
  int BANG_QG = 56;
  /** RegularExpression Id. */
  int LBRACE_QG = 57;
  /** RegularExpression Id. */
  int RBRACE_QG = 58;
  /** RegularExpression Id. */
  int EMPTY_QG = 59;
  /** RegularExpression Id. */
  int DEFINE = 60;
  /** RegularExpression Id. */
  int UNDEFINE = 61;
  /** RegularExpression Id. */
  int DEFN = 62;
  /** RegularExpression Id. */
  int PUSHDEF = 63;
  /** RegularExpression Id. */
  int POPDEF = 64;
  /** RegularExpression Id. */
  int INDIR = 65;
  /** RegularExpression Id. */
  int BUILTIN = 66;
  /** RegularExpression Id. */
  int IFDEF = 67;
  /** RegularExpression Id. */
  int IFELSE = 68;
  /** RegularExpression Id. */
  int SHIFT = 69;
  /** RegularExpression Id. */
  int DUMPDEF = 70;
  /** RegularExpression Id. */
  int TRACEON = 71;
  /** RegularExpression Id. */
  int TRACEOFF = 72;
  /** RegularExpression Id. */
  int DEBUGMODE = 73;
  /** RegularExpression Id. */
  int DEBUGFILE = 74;
  /** RegularExpression Id. */
  int CHANGEQUOTE = 75;
  /** RegularExpression Id. */
  int CHANGECOM = 76;
  /** RegularExpression Id. */
  int CHANGEWORD = 77;
  /** RegularExpression Id. */
  int M4WRAP = 78;
  /** RegularExpression Id. */
  int INCLUDE = 79;
  /** RegularExpression Id. */
  int SINCLUDE = 80;
  /** RegularExpression Id. */
  int DIVERT = 81;
  /** RegularExpression Id. */
  int UNDIVERT = 82;
  /** RegularExpression Id. */
  int DIVNUM = 83;
  /** RegularExpression Id. */
  int LEN = 84;
  /** RegularExpression Id. */
  int INDEX = 85;
  /** RegularExpression Id. */
  int REGEXP = 86;
  /** RegularExpression Id. */
  int SUBSTR = 87;
  /** RegularExpression Id. */
  int TRANSLIT = 88;
  /** RegularExpression Id. */
  int PATSUBST = 89;
  /** RegularExpression Id. */
  int FORMAT = 90;
  /** RegularExpression Id. */
  int INCR = 91;
  /** RegularExpression Id. */
  int DECR = 92;
  /** RegularExpression Id. */
  int EVAL = 93;
  /** RegularExpression Id. */
  int __GNU__ = 94;
  /** RegularExpression Id. */
  int __OS2__ = 95;
  /** RegularExpression Id. */
  int OS2 = 96;
  /** RegularExpression Id. */
  int __UNIX__ = 97;
  /** RegularExpression Id. */
  int __WINDOWS__ = 98;
  /** RegularExpression Id. */
  int WINDOWS = 99;
  /** RegularExpression Id. */
  int SYSCMD = 100;
  /** RegularExpression Id. */
  int ESYSCMD = 101;
  /** RegularExpression Id. */
  int SYSVAL = 102;
  /** RegularExpression Id. */
  int MKSTEMP = 103;
  /** RegularExpression Id. */
  int MAKETEMP = 104;
  /** RegularExpression Id. */
  int ERRPRINT = 105;
  /** RegularExpression Id. */
  int __FILE__ = 106;
  /** RegularExpression Id. */
  int __LINE__ = 107;
  /** RegularExpression Id. */
  int __PROGRAM__ = 108;
  /** RegularExpression Id. */
  int M4EXIT = 109;
  /** RegularExpression Id. */
  int M4_MACRO = 110;
  /** RegularExpression Id. */
  int MACRO_NAME = 111;
  /** RegularExpression Id. */
  int M4_MACRO_INVOCATION = 112;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 113;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 114;
  /** RegularExpression Id. */
  int HEX_LITERAL = 115;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 116;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 117;
  /** RegularExpression Id. */
  int DECIMAL_FLOATING_POINT_LITERAL = 118;
  /** RegularExpression Id. */
  int DECIMAL_EXPONENT = 119;
  /** RegularExpression Id. */
  int HEXADECIMAL_FLOATING_POINT_LITERAL = 120;
  /** RegularExpression Id. */
  int HEXADECIMAL_EXPONENT = 121;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 122;
  /** RegularExpression Id. */
  int STRING_LITERAL = 123;
  /** RegularExpression Id. */
  int QUOTED_TEXT = 124;
  /** RegularExpression Id. */
  int TEXT = 125;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int MCOMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "<SINGLE_LINE_COMMENT>",
    "<DNL_COMMENT>",
    "\"[\"",
    "\"[\"",
    "\"]\"",
    "\"]\"",
    "\"`\"",
    "\"`\"",
    "\"\\\'\"",
    "\"\\\'\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\"...\"",
    "\"@<:@\"",
    "\"@:>@\"",
    "\"@S|@\"",
    "\"@%:@\"",
    "\"@{:@\"",
    "\"@:}@\"",
    "\"@&t@\"",
    "\"define\"",
    "\"undefine\"",
    "\"defn\"",
    "\"pushdef\"",
    "\"popdef\"",
    "\"indir\"",
    "\"builtin\"",
    "\"ifdef\"",
    "\"ifelse\"",
    "\"shift\"",
    "\"dumpdef\"",
    "\"traceon\"",
    "\"traceoff\"",
    "\"debugmode\"",
    "\"debugfile\"",
    "\"changequote\"",
    "\"changecom\"",
    "\"changeword\"",
    "\"m4wrap\"",
    "\"include\"",
    "\"sinclude\"",
    "\"divert\"",
    "\"undivert\"",
    "\"divnum\"",
    "\"len\"",
    "\"index\"",
    "\"regexp\"",
    "\"substr\"",
    "\"translit\"",
    "\"patsubst\"",
    "\"format\"",
    "\"incr\"",
    "\"decr\"",
    "\"eval\"",
    "\"__gnu__\"",
    "\"__os2__\"",
    "\"os2\"",
    "\"__unix__\"",
    "\"__windows__\"",
    "\"windows\"",
    "\"syscmd\"",
    "\"esyscmd\"",
    "\"sysval\"",
    "\"mkstemp\"",
    "\"maketemp\"",
    "\"errprint\"",
    "\"__file__\"",
    "\"__line__\"",
    "\"__program__\"",
    "\"m4exit\"",
    "<M4_MACRO>",
    "<MACRO_NAME>",
    "<M4_MACRO_INVOCATION>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<DECIMAL_FLOATING_POINT_LITERAL>",
    "<DECIMAL_EXPONENT>",
    "<HEXADECIMAL_FLOATING_POINT_LITERAL>",
    "<HEXADECIMAL_EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<QUOTED_TEXT>",
    "<TEXT>",
  };

}
